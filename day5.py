# -*- coding: utf-8 -*-
"""Day5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qINWrB9lCJU5tfdZHrsMqqrKcUdQsjQg
"""

import numpy as np

print("Cau 1")
print("a)")
# A@X = B
A =  np.array([
    [1,2,1],
    [2,-1,1],
    [2,1,0]
])

B = np.array([
    [0],
    [0],
    [0]
])

X = np.linalg.solve(A,B)
print("\nx=",X[0,0],"\ny=",X[1,0],"\nz=",X[2,0])

print("b)")
A = np.array([
    [2,1,1,1],
    [1,2,1,1],
    [1,1,2,2],
    [1,1,1,2]
])

B = np.array([
    [1],
    [1],
    [1],
    [1]
])

X = np.linalg.solve(A,B)
print("\nx=",X[0,0],"\ny=",X[1,0],"\nz=",X[2,0],"\nt=",X[3,0])

#	Cau 5
#	5a) Neu dinh thuc cua ma tran A = 0 => A khong kha nghich
#	5b) Use the inverse matrix to find the solution for this linear system
#	Su dung phuong pháp ma trận nghịch đảo tìm nghiệm Hệ PTTT
#	A@x = B <=> A^(-1)@A@X = A^(-1)@B
#	        <=>	X = A^(-1)@B

print("Cau 5")
print("a)")
A =  np.array([
    [1,1,2],
    [3,6,-5],
    [2,4,-3]
])

B = np.array([
    [1],
    [-1],
    [0]
])

detA = np.linalg.det(A)
if detA == 0:
    print("Ma tran khong kha nghich")
else:
    print("Ma tran kha nghich")
print("b)")
inreverA = np.linalg.inv(A)
X = inreverA@B
print("\nx=",X[0,0],"\ny=",X[1,0],"\nz=",X[2,0])

from scipy import linalg
A = np.array([
              [1,1,2],
              [3,6,-5],
              [2,4,-3]]);
B = np.array([
              [1],
              [-1],
              [0]]);
L,U = linalg.lu(A,permute_l=True)
X = (np.linalg.inv(U))@(np.linalg.inv(L))@B
print(X)
print("\nx = ",X[0,0],"\ny = ", X[1,0],"\nz = ",X[2,0])

print("Cau 6")
A = np.array([
              [1,2,1],
              [2,2,2],
              [2,4,1]]);
B = np.array([
              [1],
              [1],
              [2]]);
print("Cach 1:")
X = np.linalg.solve(A,B)
print("\nx=",X[0,0],"\ny=",X[1,0],"\nz=",X[2,0])  
print("Cach 2:")
inreverA = np.linalg.inv(A)
X = inreverA@B
print("\nx=",X[0,0],"\ny=",X[1,0],"\nz=",X[2,0])    
print("Cach 3:")
L,U = linalg.lu(A,permute_l=True)
X = (np.linalg.inv(U))@(np.linalg.inv(L))@B
print("\nx = ",X[0,0],"\ny = ", X[1,0],"\nz = ",X[2,0])

print("Cau 7")
A = np.array([
              [1,1,1],
              [1,2,4],
              [1,3,9]]);
B = np.array([
              [6],
              [15],
              [38]]);
X = np.linalg.solve(A,B)
print("\na0=",X[0,0],"\na1=",X[1,0],"\na2=",X[2,0])